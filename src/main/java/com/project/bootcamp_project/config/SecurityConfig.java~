package com.project.bootcamp_project.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;
import org.springframework.security.web.SecurityFilterChain;

import static org.springframework.security.config.Customizer.withDefaults;

@Configuration
public class SecurityConfig {
    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
                .csrf(AbstractHttpConfigurer::disable) // Matikan CSRF untuk kemudahan pengembangan (HATI-HATI di produksi)
                .authorizeHttpRequests(auth -> auth
                        .requestMatchers("/api/users/**").permitAll() // Izinkan semua permintaan ke /api/users/**
                        .anyRequest().authenticated()) // Semua permintaan lainnya harus terotentikasi
                .httpBasic(withDefaults()); // Gunakan metode otentikasi dasar (Basic Auth)

        return http.build();
    }
}
